<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_guardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>